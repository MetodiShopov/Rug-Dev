{% comment %}
  UGC Videos Section
  - Up to 4 videos
  - Mobile-optimized grid
{% endcomment %}

<section class="ugc-videos-section">
  <div class="ugc-videos-container">
    {% if section.settings.title != blank %}
      <h2 class="ugc-videos-title">{{ section.settings.title }}</h2>
    {% endif %}

    <div class="ugc-videos-grid">
{% for block in section.blocks %}
  <div class="ugc-video-item">
    <div class="ugc-video-wrapper">
      <video
        controls
        playsinline
        {% if forloop.first %}autoplay muted{% endif %}
      >
        <source src="{{ block.settings.video_url | escape }}" type="video/mp4">
        Your browser doesn’t support the video tag.
      </video>
    </div>
    {% if block.settings.caption != blank %}
      <p class="ugc-video-caption">{{ block.settings.caption }}</p>
    {% endif %}
  </div>
{% endfor %}
    </div>
  </div>
</section>

<style>
/* Container */
.ugc-videos-section {
  padding: 40px 20px;
  background: {{ section.settings.bg_color }};
}
.ugc-videos-container {
  max-width: 1200px;
  margin: 0 auto;
}

/* Title */
.ugc-videos-title {
  font-size: 2rem;
  text-align: center;
  margin-bottom: 24px;
}

/* Desktop grid (auto-fit only real items) */
.ugc-videos-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 16px;
}

/* Video wrapper & video defaults */
.ugc-video-wrapper {
  width: 100%;
  border-radius: 8px;
  background: #000;
  overflow: hidden;
}
.ugc-video-wrapper video {
  display: block;
  width: 100%;
  height: auto;
  object-fit: contain; /* show full frame, letterbox if needed */
}

/* Caption */
.ugc-video-caption {
  font-size: 0.9rem;
  text-align: center;
  margin-top: 8px;
  color: {{ section.settings.text_color }};
}

/* ——— 600px to 900px: horizontal swipe with portrait aspect-ratio ——— */
@media (min-width: 600px) and (max-width: 900px) {
  .ugc-videos-grid {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    gap: 16px;
    padding-bottom: 8px;
  }

  .ugc-video-item {
    flex: 0 0 auto;
    width: 280px;           /* card width cap */
  }

  .ugc-video-wrapper {
    aspect-ratio: 9 / 16;   /* portrait container */
    width: 100%;
    border-radius: 8px;
    overflow: hidden;
    background: #000;
  }

  .ugc-video-wrapper video {
    width: 100%;
    height: 100%;
    object-fit: cover;     /* fills container edge-to-edge */
  }

  /* hide scrollbars */
  .ugc-videos-grid::-webkit-scrollbar { display: none; }
  .ugc-videos-grid { -ms-overflow-style: none; scrollbar-width: none; }
}

/* ——— Mobile ≤600px: peek-and-swipe carousel ——— */
@media (max-width: 600px) {
  .ugc-videos-grid {
    display: flex !important;
    flex-wrap: nowrap;
    overflow-x: auto;
    gap: 16px;
    padding-bottom: 8px;
  }

  .ugc-video-item {
    flex: 0 0 80%;         /* show one full + peek of next */
  }

  .ugc-videos-section {
    padding: 24px 12px;
  }
  .ugc-videos-title {
    font-size: 1.5rem;
  }

  /* hide native scrollbar */
  .ugc-videos-grid::-webkit-scrollbar { display: none; }
  .ugc-videos-grid { -ms-overflow-style: none; scrollbar-width: none; }
}
</style>
<script>
document.addEventListener('DOMContentLoaded', () => {
  // Adjust this if your browser's video controls are taller or shorter
  const CONTROLS_HEIGHT = 40; 

  document.querySelectorAll('.ugc-videos-section .ugc-video-wrapper').forEach(wrapper => {
    const video = wrapper.querySelector('video');
    if (!video) return;

    // ensure wrapper is positioned for absolute children
    const wcs = getComputedStyle(wrapper);
    if (wcs.position === 'static') {
      wrapper.style.position = 'relative';
    }

    // make sure the video itself is below the overlay
    video.style.zIndex = 1;

    // create the overlay hit-zone
    const overlay = document.createElement('div');
    Object.assign(overlay.style, {
      position: 'absolute',
      top:          '0',
      left:         '0',
      width:        '100%',
      height:       `calc(100% - ${CONTROLS_HEIGHT}px)`,
      zIndex:       '2',
      cursor:       'pointer',
      background:   'transparent',
    });
    wrapper.appendChild(overlay);

    // toggle play/pause when overlay is tapped
    overlay.addEventListener('click', e => {
      e.preventDefault();
      video.paused ? video.play() : video.pause();
    });
  });
});
</script>
{% schema %}
{
  "name": "UGC Videos",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "What our customers are saying"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Caption Text Color",
      "default": "#333333"
    }
  ],
  "blocks": [
    {
      "type": "ugc_video",
      "name": "UGC Video",
      "settings": [
       {
         "type": "text",
         "id": "video_url",
         "label": "Video URL (mp4)"
       },
        {
          "type": "text",
          "id": "caption",
          "label": "Caption (optional)",
          "default": "rugtomize video"
        }
      ]
    }
  ],
  "max_blocks": 4,
  "presets": [
    {
      "name": "UGC Videos",
      "category": "Custom"
    }
  ]
}
{% endschema %}